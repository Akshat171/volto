name: Working Copy Tests
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2

      # node setup
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # node cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # node install
      - run: yarn install --frozen-lockfile

      # # python setup (temporary, while p.a.iterate changes are in a PR)
      # - name: Set up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v1
      #   with:
      #     python-version: ${{ matrix.python-version }}

      # # python cache
      # - uses: actions/cache@v1
      #   with:
      #     path: ~/.cache/pip
      #     key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-
      # # python install
      # - run: pip install virtualenv
      # - name: pip install
      #   working-directory: api
      #   run: pip install -r requirements.txt
      # - name: buildout
      #   working-directory: api
      #   run: buildout
      #   env:
      #     CI: true

      - name: Cypress acceptance tests
        uses: cypress-io/github-action@v2
        env:
          BABEL_ENV: production
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          record: true
          parallel: true
          browser: chrome
          headless: true
          group: Working Copy
          config: integrationFolder=cypress/tests
          spec: cypress/tests/workingCopy/**/*.js
          start: |
            make start-test-acceptance-server-workingcopy
            make start-test-acceptance-frontend-workingcopy
          wait-on: 'npx wait-on --httpTimeout 20000 http-get://localhost:55001/plone http://localhost:3000'


      # Upload Cypress screenshots
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # Upload Cypress videos
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
